import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Textarea } from '@/components/ui/textarea';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';

const Index = () => {
  const [activeTab, setActiveTab] = useState('generator');
  const [prompt, setPrompt] = useState('');
  const [generatedText, setGeneratedText] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);

  const handleGenerate = async () => {
    if (!prompt.trim()) return;
    
    setIsGenerating(true);
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
    setTimeout(() => {
      const sampleTexts = [
        "üöÄ –ì–æ—Ç–æ–≤—ã –∫ –ø–µ—Ä–µ–º–µ–Ω–∞–º? –°–µ–≥–æ–¥–Ω—è –º—ã –ø–æ–≥–æ–≤–æ—Ä–∏–º –æ —Ç–æ–º, –∫–∞–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –º–µ–Ω—è—é—Ç –Ω–∞—à—É –∂–∏–∑–Ω—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –û—Ç —É—Ç—Ä–µ–Ω–Ω–µ–π —á–∞—à–∫–∏ –∫–æ—Ñ–µ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∑–≥–ª—è–¥–∞ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω –ø–µ—Ä–µ–¥ —Å–Ω–æ–º - –≤—Å—ë —ç—Ç–æ —á–∞—Å—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –º–∏—Ä–∞!",
        "üìà –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –±—É–¥—É—â–µ–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –º–∞–ª–æ–≥–æ. –î–∞–∂–µ 100 —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü –º–æ–≥—É—Ç –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Å–µ—Ä—å—ë–∑–Ω—É—é —Å—É–º–º—É —á–µ—Ä–µ–∑ 10 –ª–µ—Ç. –ì–ª–∞–≤–Ω–æ–µ - –Ω–∞—á–∞—Ç—å –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!",
        "üéØ –£—Å–ø–µ—Ö - —ç—Ç–æ –Ω–µ –∫–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞, –∞ –ø—Ä–æ—Ü–µ—Å—Å. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –º—ã –º–æ–∂–µ–º –¥–µ–ª–∞—Ç—å –º–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –∫ –±–æ–ª—å—à–æ–π —Ü–µ–ª–∏. –ß—Ç–æ –≤—ã —Å–¥–µ–ª–∞–µ—Ç–µ —Å–µ–≥–æ–¥–Ω—è –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–≤–æ–µ–π –º–µ—á—Ç—ã?"
      ];
      
      const randomText = sampleTexts[Math.floor(Math.random() * sampleTexts.length)];
      setGeneratedText(randomText);
      setIsGenerating(false);
    }, 2000);
  };

  const templates = [
    {
      title: "–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Å—Ç",
      description: "–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–∏—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π",
      emoji: "üí™",
      category: "–ú–æ—Ç–∏–≤–∞—Ü–∏—è"
    },
    {
      title: "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç", 
      description: "–ü–æ–ª–µ–∑–Ω—ã–µ —Ñ–∞–∫—Ç—ã –∏ —Å–æ–≤–µ—Ç—ã –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤",
      emoji: "üìö",
      category: "–û–±—É—á–µ–Ω–∏–µ"
    },
    {
      title: "–ù–æ–≤–æ—Å—Ç–Ω–æ–π –¥–∞–π–¥–∂–µ—Å—Ç",
      description: "–ö—Ä–∞—Ç–∫–∏–π –æ–±–∑–æ—Ä –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π",
      emoji: "üì∞", 
      category: "–ù–æ–≤–æ—Å—Ç–∏"
    },
    {
      title: "–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ—Å—Ç",
      description: "–õ—ë–≥–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø–æ–¥–Ω—è—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è",
      emoji: "üéâ",
      category: "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è"
    },
    {
      title: "–í–æ–ø—Ä–æ—Å –∞—É–¥–∏—Ç–æ—Ä–∏–∏",
      description: "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ—Å—Ç –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è",
      emoji: "‚ùì",
      category: "–í–æ–≤–ª–µ—á–µ–Ω–∏–µ"
    },
    {
      title: "–ê–Ω–æ–Ω—Å —Å–æ–±—ã—Ç–∏—è",
      description: "–ü—Ä–∏–≤–ª–µ–∫–∞—é—â–∏–π –≤–Ω–∏–º–∞–Ω–∏–µ –∞–Ω–æ–Ω—Å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è",
      emoji: "üìÖ",
      category: "–°–æ–±—ã—Ç–∏—è"
    }
  ];

  const pricingPlans = [
    {
      name: "–ë–∞–∑–æ–≤—ã–π",
      price: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
      features: ["5 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –≤ –¥–µ–Ω—å", "–ë–∞–∑–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã", "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"],
      popular: false
    },
    {
      name: "–ü—Ä–æ",
      price: "490‚ÇΩ/–º–µ—Å",
      features: ["100 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –≤ –¥–µ–Ω—å", "–í—Å–µ —à–∞–±–ª–æ–Ω—ã", "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", "API –¥–æ—Å—Ç—É–ø"],
      popular: true
    },
    {
      name: "–ë–∏–∑–Ω–µ—Å",
      price: "1990‚ÇΩ/–º–µ—Å", 
      features: ["–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏", "–ö–∞—Å—Ç–æ–º–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã", "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä", "–ë–µ–ª—ã–π –ª–µ–π–±–ª"],
      popular: false
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-violet-50 via-white to-pink-50">
      {/* Header */}
      <header className="border-b bg-white/80 backdrop-blur-md sticky top-0 z-50">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-gradient-to-r from-violet-500 to-pink-500 rounded-xl flex items-center justify-center">
                <Icon name="MessageCircle" size={20} className="text-white" />
              </div>
              <h1 className="text-2xl font-display font-bold bg-gradient-to-r from-violet-600 to-pink-600 bg-clip-text text-transparent">
                TeleGen
              </h1>
            </div>
            
            <nav className="hidden md:flex space-x-8">
              {['–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä', '–®–∞–±–ª–æ–Ω—ã', '–¢–∞—Ä–∏—Ñ—ã'].map((item) => (
                <button
                  key={item}
                  onClick={() => setActiveTab(item.toLowerCase())}
                  className={`font-medium transition-colors ${
                    activeTab === item.toLowerCase()
                      ? 'text-violet-600 border-b-2 border-violet-600'
                      : 'text-gray-600 hover:text-violet-600'
                  }`}
                >
                  {item}
                </button>
              ))}
            </nav>

            <Button className="bg-gradient-to-r from-violet-600 to-pink-600 text-white hover:from-violet-700 hover:to-pink-700">
              –í–æ–π—Ç–∏
            </Button>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="container mx-auto px-4 py-8">
        <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
          {/* Hero Section - —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π */}
          {activeTab === 'generator' && (
            <div className="text-center mb-12 animate-fade-in">
              <h2 className="text-5xl font-display font-bold mb-6 bg-gradient-to-r from-violet-600 via-pink-600 to-emerald-600 bg-clip-text text-transparent leading-tight">
                –ò–ò –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ç–µ–∫—Å—Ç–æ–≤<br />–¥–ª—è Telegram –∫–∞–Ω–∞–ª–æ–≤
              </h2>
              <p className="text-xl text-gray-600 max-w-2xl mx-auto mb-8">
                –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –≤–∏—Ä—É—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∑–∞ —Å–µ–∫—É–Ω–¥—ã. –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ, –∏ –ø–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π –ø–æ—Å—Ç –¥–ª—è –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞.
              </p>
            </div>
          )}

          <TabsList className="grid grid-cols-3 w-full max-w-md mx-auto mb-8 md:hidden">
            <TabsTrigger value="generator">
              <Icon name="Zap" size={16} className="mr-2" />
              –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä
            </TabsTrigger>
            <TabsTrigger value="—à–∞–±–ª–æ–Ω—ã">
              <Icon name="FileText" size={16} className="mr-2" />
              –®–∞–±–ª–æ–Ω—ã  
            </TabsTrigger>
            <TabsTrigger value="—Ç–∞—Ä–∏—Ñ—ã">
              <Icon name="CreditCard" size={16} className="mr-2" />
              –¢–∞—Ä–∏—Ñ—ã
            </TabsTrigger>
          </TabsList>

          {/* Generator Tab */}
          <TabsContent value="generator" className="space-y-8">
            <Card className="max-w-4xl mx-auto shadow-xl border-0 bg-white/80 backdrop-blur-sm animate-scale-in">
              <CardHeader className="text-center pb-6">
                <CardTitle className="text-2xl font-display font-bold text-gray-800">
                  üöÄ –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç –¥–ª—è –∫–∞–Ω–∞–ª–∞
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="space-y-3">
                  <label className="text-sm font-medium text-gray-700">
                    –û–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π –ø–æ—Å—Ç —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å
                  </label>
                  <Textarea
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Å—Ç –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–µ–π –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–µ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏..."
                    value={prompt}
                    onChange={(e) => setPrompt(e.target.value)}
                    className="min-h-[120px] resize-none border-gray-200 focus:border-violet-500 focus:ring-violet-500"
                  />
                </div>

                <div className="flex flex-wrap gap-2">
                  <Badge variant="secondary" className="cursor-pointer hover:bg-violet-100" 
                    onClick={() => setPrompt("–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Å—Ç –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–µ–π")}>
                    üí™ –ú–æ—Ç–∏–≤–∞—Ü–∏—è
                  </Badge>
                  <Badge variant="secondary" className="cursor-pointer hover:bg-pink-100"
                    onClick={() => setPrompt("–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ—Å—Ç –æ —Ñ–∏–Ω–∞–Ω—Å–∞—Ö")}>
                    üí∞ –§–∏–Ω–∞–Ω—Å—ã
                  </Badge>
                  <Badge variant="secondary" className="cursor-pointer hover:bg-emerald-100"
                    onClick={() => setPrompt("–ü–æ—Å—Ç-–≤–æ–ø—Ä–æ—Å –¥–ª—è –≤–æ–≤–ª–µ—á–µ–Ω–∏—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏")}>
                    ‚ùì –í–æ–ø—Ä–æ—Å
                  </Badge>
                  <Badge variant="secondary" className="cursor-pointer hover:bg-orange-100"
                    onClick={() => setPrompt("–ù–æ–≤–æ—Å—Ç–Ω–æ–π –ø–æ—Å—Ç –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö")}>
                    üì± –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
                  </Badge>
                </div>

                <Button 
                  onClick={handleGenerate}
                  disabled={!prompt.trim() || isGenerating}
                  className="w-full bg-gradient-to-r from-violet-600 to-pink-600 hover:from-violet-700 hover:to-pink-700 h-12 text-lg font-medium"
                >
                  {isGenerating ? (
                    <>
                      <Icon name="Loader2" size={20} className="mr-2 animate-spin" />
                      –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º...
                    </>
                  ) : (
                    <>
                      <Icon name="Sparkles" size={20} className="mr-2" />
                      –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç
                    </>
                  )}
                </Button>

                {generatedText && (
                  <div className="space-y-3 animate-slide-up">
                    <label className="text-sm font-medium text-gray-700">
                      –ì–æ—Ç–æ–≤—ã–π –ø–æ—Å—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                    </label>
                    <div className="relative">
                      <Textarea
                        value={generatedText}
                        onChange={(e) => setGeneratedText(e.target.value)}
                        className="min-h-[150px] border-emerald-200 focus:border-emerald-500 focus:ring-emerald-500 bg-emerald-50"
                      />
                      <Button
                        size="sm"
                        variant="outline"
                        className="absolute top-2 right-2"
                        onClick={() => navigator.clipboard.writeText(generatedText)}
                      >
                        <Icon name="Copy" size={16} className="mr-1" />
                        –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                      </Button>
                    </div>
                    <div className="flex gap-2">
                      <Button variant="outline" size="sm">
                        <Icon name="RefreshCw" size={16} className="mr-1" />
                        –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
                      </Button>
                      <Button variant="outline" size="sm">
                        <Icon name="Download" size={16} className="mr-1" />
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                      </Button>
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>
          </TabsContent>

          {/* Templates Tab */}
          <TabsContent value="—à–∞–±–ª–æ–Ω—ã" className="space-y-8">
            <div className="text-center mb-8">
              <h2 className="text-3xl font-display font-bold mb-4 text-gray-800">
                –ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –ø–æ—Å—Ç–æ–≤
              </h2>
              <p className="text-gray-600 max-w-2xl mx-auto">
                –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à–∞–±–ª–æ–Ω –∏ –∞–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –ø–æ–¥ —Å–≤–æ–π –∫–∞–Ω–∞–ª
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {templates.map((template, index) => (
                <Card key={index} className="hover:shadow-lg transition-shadow cursor-pointer bg-white/80 backdrop-blur-sm animate-scale-in border-0">
                  <CardContent className="p-6">
                    <div className="flex items-start space-x-4">
                      <div className="text-3xl">{template.emoji}</div>
                      <div className="flex-1">
                        <div className="flex items-center justify-between mb-2">
                          <h3 className="font-semibold text-gray-800">{template.title}</h3>
                          <Badge variant="outline" className="text-xs">
                            {template.category}
                          </Badge>
                        </div>
                        <p className="text-sm text-gray-600 mb-4">
                          {template.description}
                        </p>
                        <Button size="sm" variant="outline" className="w-full">
                          <Icon name="Play" size={14} className="mr-1" />
                          –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
                        </Button>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          {/* Pricing Tab */}
          <TabsContent value="—Ç–∞—Ä–∏—Ñ—ã" className="space-y-8">
            <div className="text-center mb-8">
              <h2 className="text-3xl font-display font-bold mb-4 text-gray-800">
                –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ
              </h2>
              <p className="text-gray-600 max-w-2xl mx-auto">
                –ù–∞—á–Ω–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-5xl mx-auto">
              {pricingPlans.map((plan, index) => (
                <Card key={index} className={`relative bg-white/80 backdrop-blur-sm animate-scale-in border-0 ${
                  plan.popular 
                    ? 'shadow-xl scale-105 border-2 border-violet-200' 
                    : 'shadow-lg hover:shadow-xl'
                } transition-all duration-300`}>
                  {plan.popular && (
                    <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
                      <Badge className="bg-gradient-to-r from-violet-600 to-pink-600 text-white">
                        –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                      </Badge>
                    </div>
                  )}
                  <CardContent className="p-6 text-center">
                    <h3 className="text-xl font-display font-bold mb-2">{plan.name}</h3>
                    <div className="text-3xl font-bold mb-4 text-violet-600">{plan.price}</div>
                    <ul className="space-y-3 mb-6">
                      {plan.features.map((feature, featureIndex) => (
                        <li key={featureIndex} className="flex items-center text-sm text-gray-600">
                          <Icon name="Check" size={16} className="mr-2 text-emerald-500 flex-shrink-0" />
                          {feature}
                        </li>
                      ))}
                    </ul>
                    <Button 
                      className={`w-full ${
                        plan.popular
                          ? 'bg-gradient-to-r from-violet-600 to-pink-600 hover:from-violet-700 hover:to-pink-700 text-white'
                          : 'border-violet-200 text-violet-600 hover:bg-violet-50'
                      }`}
                      variant={plan.popular ? 'default' : 'outline'}
                    >
                      {plan.price === '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' ? '–ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ' : '–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω'}
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>
        </Tabs>
      </main>

      {/* Footer */}
      <footer className="bg-gray-50 border-t mt-16">
        <div className="container mx-auto px-4 py-8">
          <div className="text-center text-gray-600">
            <p>&copy; 2024 TeleGen. –°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é –ò–ò –¥–ª—è –≤–∞—à–µ–≥–æ —É—Å–ø–µ—Ö–∞.</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;